---
import ProjectCard from "./ProjectCard.astro";

export const projects = [
  {
    name: "Umtappo",
    overview:
      "Web app where you search, rate and organize watchlists, Get content based on your likes and rates",
    stack: ["React.js", "Redux", "Sass", "Express.js", "MongoDB"],
    pictures: ["/assets/images/umptappo_mock_1.png"],
    carousel_mobile: [
      "/assets/images/umtappo_carousel_mobile_00.png",
      "/assets/images/umtappo_carousel_mobile_01.png",
      "/assets/images/umtappo_carousel_mobile_02.png",
      "/assets/images/umtappo_carousel_mobile_03.png",
    ],
    carousel_desktop: [
      "/assets/images/umtappo-carousel-desktop-00.webp",
      "/assets/images/umtappo_carousel_desktop_01.png",
      "/assets/images/umtappo_carousel_desktop_02.png",
      "/assets/images/umtappo_carousel_desktop_03.png",
    ],
    demo_link: "https://umtappo-d6u1.onrender.com/",
    repo_link: "https://github.com/Tiyyo/Umtappo",
  },
  {
    name: "Resep",
    overview:
      "Webapp where you build your own recipes and get the nutritional information of your recipes, and generate a shopping list based on your recipes",
    stack: ["Remix", "Tailwind", "Sqlite", "TypeScript"],
    pictures: ["/assets/images/resep_mock_laptop.png"],
    carousel_desktop: ["/assets/images/resep_carousel_desktop_01.png", "/assets/images/resep_carousel_desktop_02.png", "/assets/images/resep_carousel_desktop_03.png"],
    carousel_mobile: ["/assets/images/resep_carousel_mobile_01.png", "/assets/images/resep_carousel_mobile_02.png", "/assets/images/resep_carousel_mobile_03.png"],
    demo_link: "https://resep.fly.dev",
    repo_link: "https://github.com/Tiyyo/resep_app",
  },
  {
    name: "E-commerce page",
    overview:
      "E-commerce product page",
    stack: ["JavaScript", "Sass"],
    pictures: ["/assets/images/e-commerce_page_1.png"],
    carousel_mobile: ["/assets/images/e-commerce_page_mobile.png"],
    carousel_desktop: ["/assets/images/e-commerce_page_desktop.png"],
    demo_link: "https://tiyyo.github.io/Ecommerce-product-page-/",
    repo_link: "https://github.com/Tiyyo/Ecommerce-product-page-",
  },
  {
    name: "My portfolio",
    overview:
      "My personal portfolio built with Astro.js",
    stack: ["Astro.js", "TypeScript"],
    pictures: ["/assets/images/portfolio_mock_laptop.png"],
    carousel_mobile: ["/assets/images/portfolio_carousel_mobile.png"],
    carousel_desktop: ["/assets/images/portfolio_carousel_desktop.png"],
    demo_link: "https://steevematou.dev/",
    repo_link: "https://github.com/Tiyyo/Portfolio",
  },
];

export const tags = [
  "JavaScript",
  "TypeScript",
  "Redux",
  "Express.js",
  "Sass",
  "Astro.js",
  "Remix",
  "MongoDB",
  "React.js",
  "Tailwind",
  "PostegreSQL"
];
---

<div class="filters-tag">
  {tags.map((tag) => <div class="tag">{tag}</div>)}
</div>

<div class="card-container">
  {
    projects.map((project, index) => (
      <ProjectCard project={project} index={index + 1} />
    ))
  }
</div>

<style>
  .card-container {
    display: inline-flex;
    flex-wrap: wrap;
    gap: 1em;
    align-items: center;
    justify-content: space-evenly;
    margin: 2em 0;
    width: 100%;
  }
  .filters-tag {
    display: inline-flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 0.6em 0.3em;
    padding: 2vh 5vh;
  }
  .tag {
    font-size: 0.9em;
    border: 1px solid : var(--light_full);
    color : var(--title_accent);
    padding: 7.5px 8px;
    background-color: var(--light_background);
    border-radius: 0.24em;
    transition: 0.3s;
    cursor: pointer;

  }
  .tag.is-active {
    border: 1px solid none;
    background-color: var(--active_tag);
    box-shadow: 4px 6px 1px 0px #000000;
    transition: 0.3s;
    color: var(--active_tag_text);
  }
</style>
<script>
  interface Projects {
    tags: NodeListOf<Element>;
    cards: NodeListOf<Element>;
    activeFilters: NodeList | [];
    filterValue: Array<string>;
    toggleFilter: (el: Element) => void;
    getFilters: () => void;
    removeCard: (el: Element) => void;
    addCard: (el: Element) => void;
    handleCards: (nodelist: NodeListOf<Element>) => void;
    init: () => void;
  }

  const projects: Projects = {
    tags: document.querySelectorAll(".tag"),
    cards: document.querySelectorAll(".project-card"),
    activeFilters: [],
    filterValue: [],
    toggleFilter: function (el: Element) {
      el.classList.toggle("is-active");
    },
    getFilters: function () {
      projects.activeFilters = document.querySelectorAll(".tag.is-active");
      let currentFilters: Array<string> = [];
      projects.activeFilters.forEach((f) =>
        currentFilters.push(f.textContent as string)
      );
      projects.filterValue = currentFilters;
    },
    removeCard: function (el: Element) {
      el.classList.add("fadeOut");
      setTimeout(() => {
        el.classList.add("removed");
        el.classList.remove("fadeOut");
      }, 300);
    },
    addCard: function (el: Element) {
      el.classList.remove("removed");
    },
    handleCards: function (nodelist) {
      nodelist.forEach((card) => {
        if (card !== null && card instanceof HTMLElement) {
          let cardTags: Array<string>;
          card.dataset.tag ? (cardTags = card.dataset.tag.split(",")) : "";
          let isExist: boolean = projects.filterValue.every((f) =>
            cardTags.includes(f)
          );
          if (projects.filterValue.length === 0) {
            nodelist.forEach((card) => projects.addCard(card));
          } else if (isExist && projects.filterValue.length > 0) {
            projects.addCard(card);
          } else {
            projects.removeCard(card);
          }
        }
      });
    },
    init: function () {
      projects.tags.forEach((tag) =>
        tag.addEventListener("click", () => {
          projects.toggleFilter(tag);
          projects.getFilters();
          projects.handleCards(projects.cards);
        })
      );
    },
  };

  projects.init();
</script>
